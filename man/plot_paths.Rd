% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s5_interpolate_animate.R
\name{plot_paths}
\alias{plot_paths}
\alias{plot.str_paths}
\alias{plot.lc_paths}
\title{Plot an object of class \code{*_paths}}
\usage{
plot_paths(paths, path_palette = viridis::viridis, add = FALSE,
set_par = !add, use_ggplot = FALSE)

\method{plot}{str_paths}(stps, ...)

\method{plot}{lc_paths}(lcps, ...)
}
\arguments{
\item{paths}{An object of class \code{*_paths}: either \code{str_paths}
or \code{lc_paths}}

\item{path_palette}{A function name that will generate a palette for each
of the individuals tracked. Can be any function that will accept \code{n}
as an argument.}

\item{add}{\code{TRUE} or \code{FALSE}. Should the plot be added to an
existing plot? Defaults to \code{FALSE}. Not applicable if
\code{use_ggplot = TRUE}. User could, \emph{e.g.}, use this option to
add this plot on top of \code{\link{map_dets}()}.}

\item{set_par}{\code{TRUE} or \code{FALSE}. Should the function change
the graphical parameters or not? This should be \code{FALSE} if the
user wishes to manually set the graphical parameters, \emph{e.g.}, so
that they can still add to the plot manually after it is generated.
Defaults to \code{!add}.}

\item{use_ggplot}{\code{TRUE} or \code{FALSE}. Should the plot be
made using \code{ggplot2}? Defaults to \code{FALSE} and uses base R
plotting.}

\item{stps}{An object of class \code{str_paths} to be passed from the
generic \code{plot()} to \code{plot_paths()}}

\item{lcps}{An object of class \code{lc_paths} to be passed from the
generic \code{plot()} to \code{plot_paths()}}
}
\description{
Plots the paths between locations for all individuals
in an \code{str_paths} or an \code{lc_paths} object.
}
\details{
Blah blah
}
\section{Methods (by generic)}{
\itemize{
\item \code{plot}: Plot \code{str_paths} objects

\item \code{plot}: Plot \code{lc_paths} objects
}}

\examples{

#Load sample data
data(acoustic)

#Process detections and stations
proc.det <- proc_dets(det = acoustic$detections, sta = acoustic$stations)

#Calculate  COAs -- Note, using 6 hour COAs to reduce processing time
coas.6h <- coa_locs(proc.det, Delta_t = "6 hours")

#Initialize raster
r.cond <- init_raster(study_area = acoustic$study_area, res = 0.001)

#Create conductance raster
conduct <- raster_conduct(sa_rast = r.cond, impassable = acoustic$land)

#Create least-cost paths
lcps <- lc_paths(det_locs = coas.6h, conductance = conduct)

#Plot
plot_paths(lcps)

#Plot on top of detections
  #Note set_par = FALSE in both functions
  #Consider manually setting graphical parameters for this plot

map_dets(proc_det = proc.det, sta_crs = 4326,
  base_layers = list(acoustic$study_area, acoustic$land),
  base_cols = list("gray30", "wheat"), base_borders = list(NA, "seagreen"),
  xlim=c(-64.636, -64.604), ylim=c(17.770, 17.795),
  leg_pos = "topleft", sta_col = "blue", sta_bg = "orange",
  set_par = FALSE)

plot_paths(lcps, set_par = FALSE, add = TRUE)

#Plot with ggplot
plot_paths(lcps, use_ggplot = TRUE) +
  theme_bw() +
  geom_sf(data = acoustic$land)
}
